<div id="printful-designer-container" style="width: 100%; height: 800px;"></div>
<button id="launch-edm-button">Customize Product</button>

<script>
  // assets/custom-edm.js (or directly in script tags)

  document.addEventListener('DOMContentLoaded', () => {
    const launchButton = document.getElementById('launch-edm-button');
    const designerContainer = document.getElementById('printful-designer-container');
    let designMakerInstance = null; // To store the EDM instance

    if (launchButton && designerContainer) {
      launchButton.addEventListener('click', async () => {
        // Example: Get Shopify product ID and map to Printful product ID
        // You'll need to implement logic to get the correct Printful productId (e.g., from product metafields)
        const shopifyProductId = {{ product.id }}; // Get current Shopify product ID
        const printfulProductId = getPrintfulProductId(shopifyProductId); // Your function to map

        if (!printfulProductId) {
          console.error("Printful Product ID not found for this Shopify product.");
          alert("This product cannot be customized at the moment.");
          return;
        }

        try {
          // 1. Fetch nonce from your Vercel backend
          const response = await fetch('https://printful-server-chi.vercel.app//api/printful/edm-token', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },

            body: JSON.stringify({ externalProductId: `shopify-${shopifyProductId}` })
          });

          if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
          }

          const data = await response.json();
          const nonce = data.nonce;

          // 2. Initialize and Launch EDM
          if (typeof PFDesignMaker === 'undefined') {
            console.error("PFDesignMaker not loaded. Ensure embed.js is correctly included.");
            return;
          }

          // If an instance already exists, destroy it before creating a new one
          if (designMakerInstance) {
            designMakerInstance.destroy();
          }

          designMakerInstance = new PFDesignMaker({
            elemId: 'printful-designer-container', // ID of the container div
            nonce: nonce,
            externalProductId: `shopify-${shopifyProductId}`, // Unique ID for your design
            initProduct: {
              productId: printfulProductId, // Printful's internal product ID (e.g., 438 for a mug)
            },
            // Optional callbacks
            onSave: (data) => {
              console.log('Design saved:', data);
              // Handle saved design data, e.g., update your cart item or save to Shopify metafields
            },
            onCancel: () => {
              console.log('Design cancelled.');
              // Handle cancellation
            },
            onError: (error) => {
              console.error('EDM Error:', error);
              // Handle errors
            }
          });

          // Show the container and potentially hide other product details
          designerContainer.style.display = 'block';
          launchButton.style.display = 'none'; // Hide the launch button
          // You might want to scroll to the designer or open it in a modal
          designerContainer.scrollIntoView({ behavior: 'smooth' });

        } catch (error) {
          console.error('Error launching EDM:', error);
          alert('Could not launch design maker. Please try again.');
        }
      });
    }

    // This is a placeholder function. You'll need to implement how you map your Shopify product ID
    // to the corresponding Printful Product ID from their catalog. This could be
    // via Shopify metafields, a lookup table, or fetching from your backend.
    function getPrintfulProductId(shopifyId) {
      // Example: A simple hardcoded map (NOT for production)
      const productMap = {
        1234567890: 438, // Shopify Product ID: Printful Mug ID
        9876543210: 123, // Another Shopify Product ID: Printful T-shirt ID
        // ... more mappings
      };
      return productMap[shopifyId];

      // A more robust solution would involve:
      // 1. Storing Printful product IDs in Shopify product metafields.
      // 2. Fetching from your backend, which might get a list of Printful products.
    }
  });
</script>